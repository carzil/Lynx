
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'\xb8>\xf5\x13\xda3\xc3\xec\rf\xa9\xc71Q\xd2O'
    
_lr_action_items = {'LPAR':([0,8,19,23,31,33,42,49,51,52,53,54,55,56,57,58,60,66,69,70,75,77,78,80,87,115,152,153,156,157,161,172,175,180,181,183,],[2,51,2,69,75,78,-2,75,2,2,2,2,2,2,2,2,109,-3,2,-6,2,2,2,75,-5,75,2,2,2,2,2,183,2,2,2,2,]),'RETURN':([0,19,33,42,51,52,53,54,55,56,57,58,66,69,70,75,77,78,87,152,153,156,157,161,172,175,180,181,183,],[4,4,4,-2,4,4,4,4,4,4,4,4,-3,4,-6,4,4,4,-5,4,4,4,4,4,4,4,4,4,4,]),'THEN':([1,3,5,6,12,13,17,18,20,22,25,26,29,32,34,37,40,43,48,49,50,59,62,63,73,79,80,81,89,97,98,99,100,110,111,112,113,114,119,120,123,124,125,126,127,128,129,130,136,137,138,139,140,141,142,143,144,145,146,147,148,155,158,184,185,189,199,],[-64,-89,-79,-45,-62,-91,-59,-46,-69,-90,-47,-85,-80,-88,-73,-60,-66,-52,-86,-87,-105,-81,-82,-83,-92,-48,-87,135,-84,-65,-68,-67,-70,-63,-50,-51,-71,-72,-93,-31,-96,-101,-100,-102,-103,-98,-99,-97,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,163,-32,-49,194,195,198,205,]),'BOR':([1,3,5,12,13,20,22,24,26,29,31,32,34,37,40,48,49,59,62,63,73,80,89,97,98,99,110,113,114,115,119,120,133,136,137,138,139,140,141,155,],[-64,-89,-79,-62,-91,-69,-90,-86,-85,-80,-87,-88,-73,88,-66,-86,-87,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-61,-32,]),'NUMBER':([0,2,4,10,14,16,19,30,33,41,42,44,45,46,51,52,53,54,55,56,57,58,61,64,65,66,67,68,69,70,75,77,78,82,83,84,85,86,87,88,90,91,92,93,94,95,118,152,153,156,157,161,172,175,180,181,183,],[32,32,32,32,32,32,32,32,32,32,-2,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-3,32,32,32,-6,32,32,32,32,32,32,32,32,-5,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'ELSE':([160,171,173,174,182,186,188,202,207,],[-17,-17,-16,185,185,-15,-104,-18,-19,]),'RPAR':([1,3,5,6,12,13,17,18,20,22,25,26,29,32,34,37,40,43,47,48,49,50,59,62,63,73,75,79,80,89,97,98,99,100,101,110,111,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,133,134,136,137,138,139,140,141,142,143,144,145,146,147,149,150,155,158,169,178,179,190,191,193,],[-64,-89,-79,-45,-62,-91,-59,-46,-69,-90,-47,-85,-80,-88,-73,-60,-66,-52,100,-86,-87,-105,-81,-82,-83,-92,120,-48,-87,-84,-65,-68,-67,-70,148,-63,-50,-51,-71,-72,-93,-31,155,-43,-96,-101,-100,-102,-103,-98,-99,-97,100,159,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,164,-29,-32,-49,-44,-28,-30,199,200,201,]),'SHIFTRIGTH':([1,3,5,13,20,22,24,26,29,31,32,34,40,48,49,59,62,63,73,80,89,96,97,98,99,110,113,114,115,119,120,133,136,137,138,139,140,155,],[45,-89,-79,-91,-69,-90,-86,-85,-80,-87,-88,-73,-66,-86,-87,-81,-82,-83,-92,-87,-84,45,-65,-66,-66,45,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-32,]),'WHILE':([0,19,42,66,70,87,161,175,],[8,8,-2,-3,-6,-5,8,8,]),'MUL':([3,5,13,22,24,26,29,31,32,34,48,49,59,62,63,73,80,89,113,114,115,119,120,136,137,138,139,140,155,],[-89,-79,-91,-90,-86,-85,-80,-87,-88,83,-86,-87,-81,-82,-83,-92,-87,-84,83,83,-87,-93,-31,-77,-74,-75,-78,-76,-32,]),'DIV':([3,5,13,22,24,26,29,31,32,34,48,49,59,62,63,73,80,89,113,114,115,119,120,136,137,138,139,140,155,],[-89,-79,-91,-90,-86,-85,-80,-87,-88,84,-86,-87,-81,-82,-83,-92,-87,-84,84,84,-87,-93,-31,-77,-74,-75,-78,-76,-32,]),'EMARK':([0,2,4,19,33,42,44,45,46,51,52,53,54,55,56,57,58,61,64,65,66,67,68,69,70,75,77,78,82,83,84,85,86,87,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[10,10,10,10,10,-2,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-3,10,10,10,-6,10,10,10,10,10,10,10,10,-5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'MINUS':([0,2,3,4,5,13,19,20,22,24,26,29,31,32,33,34,42,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,73,75,77,78,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,113,114,115,119,120,133,136,137,138,139,140,152,153,155,156,157,161,172,175,180,181,183,],[14,14,-89,14,-79,-91,14,68,-90,-86,-85,-80,-87,-88,14,-73,-2,14,14,14,68,-86,-87,14,14,14,14,14,14,14,14,-81,14,-82,-83,14,14,-3,14,14,14,-6,-92,14,14,14,-87,14,14,14,14,14,-5,14,-84,14,14,14,14,14,14,-71,-72,-87,-93,-31,68,-77,-74,-75,-78,-76,14,14,-32,14,14,14,14,14,14,14,14,]),'DEF':([0,19,42,66,70,87,161,175,],[11,11,-2,-3,-6,-5,11,11,]),'RBRACE':([42,66,70,87,161,175,],[-2,-3,-6,-5,-4,188,]),'DAE':([9,21,31,115,158,],[53,-42,-41,-41,-49,]),'LE':([1,3,5,12,13,17,20,22,24,26,29,31,32,34,37,40,43,48,49,59,62,63,73,80,89,97,98,99,110,111,112,113,114,115,119,120,133,136,137,138,139,140,141,142,143,144,145,146,147,155,],[-64,-89,-79,-62,-91,-59,-69,-90,-86,-85,-80,-87,-88,-73,-60,-66,95,-86,-87,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,95,95,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-32,]),'SEMICOLON':([1,3,5,6,7,12,13,17,18,20,21,22,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,43,48,49,50,59,62,63,73,79,80,89,97,98,99,100,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,119,120,136,137,138,139,140,141,142,143,144,145,146,147,155,158,162,167,168,170,176,187,188,192,196,197,203,204,206,208,],[-64,-89,-79,-45,-7,-62,-91,-59,-46,-69,-48,-90,-9,-47,-85,70,-11,-80,-87,-88,-73,-8,87,-60,-12,-10,-66,-52,-86,-87,-105,-81,-82,-83,-92,-48,-87,-84,-65,-68,-67,-70,-36,-40,-39,-34,-35,-38,-37,-63,-50,-51,-71,-72,-87,152,153,-93,-31,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-32,-49,-22,180,181,-33,-23,-13,-104,-14,-21,-27,-20,-26,-24,-25,]),'BXOR':([1,3,5,12,13,20,22,24,26,29,31,32,34,40,48,49,59,62,63,73,80,89,97,98,99,110,113,114,115,119,120,133,136,137,138,139,140,141,155,],[-64,-89,-79,61,-91,-69,-90,-86,-85,-80,-87,-88,-73,-66,-86,-87,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,61,-32,]),'NE':([1,3,5,12,13,17,20,22,24,26,29,31,32,34,37,40,43,48,49,59,62,63,73,80,89,97,98,99,110,111,112,113,114,115,119,120,133,136,137,138,139,140,141,142,143,144,145,146,147,155,],[-64,-89,-79,-62,-91,-59,-69,-90,-86,-85,-80,-87,-88,-73,-60,-66,93,-86,-87,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,93,93,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-32,]),'CFLOAT':([76,166,177,],[127,127,127,]),'LT':([1,3,5,12,13,17,20,22,24,26,29,31,32,34,37,40,43,48,49,59,62,63,73,80,89,97,98,99,110,111,112,113,114,115,119,120,133,136,137,138,139,140,141,142,143,144,145,146,147,155,],[-64,-89,-79,-62,-91,-59,-69,-90,-86,-85,-80,-87,-88,-73,-60,-66,94,-86,-87,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,94,94,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-32,]),'PLUS':([0,2,3,4,5,13,19,20,22,24,26,29,31,32,33,34,42,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,73,75,77,78,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,113,114,115,119,120,133,136,137,138,139,140,152,153,155,156,157,161,172,175,180,181,183,],[16,16,-89,16,-79,-91,16,67,-90,-86,-85,-80,-87,-88,16,-73,-2,16,16,16,67,-86,-87,16,16,16,16,16,16,16,16,-81,16,-82,-83,16,16,-3,16,16,16,-6,-92,16,16,16,-87,16,16,16,16,16,-5,16,-84,16,16,16,16,16,16,-71,-72,-87,-93,-31,67,-77,-74,-75,-78,-76,16,16,-32,16,16,16,16,16,16,16,16,]),'PE':([9,21,31,115,158,],[56,-42,-41,-41,-49,]),'COMMA':([1,3,5,6,12,13,17,18,20,22,25,26,29,32,34,37,40,43,48,49,50,59,62,63,71,72,73,74,79,80,89,97,98,99,100,110,111,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,158,169,178,179,],[-64,-89,-79,-45,-62,-91,-59,-46,-69,-90,-47,-85,-80,-88,-73,-60,-66,-52,-86,-87,-105,-81,-82,-83,118,-94,-92,-87,-48,-87,-84,-65,-68,-67,-70,-63,-50,-51,-71,-72,-93,-31,156,-43,-96,-101,-100,-102,-103,-98,-99,-97,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,165,-29,-95,-32,-49,-44,-28,-30,]),'ARRAY':([76,166,177,],[129,129,129,]),'TLONG':([76,166,177,],[130,130,130,]),'RSQB':([1,3,5,6,12,13,17,18,20,22,25,26,29,30,32,34,37,40,43,48,49,50,59,62,63,71,72,73,74,79,80,89,97,98,99,100,110,111,112,113,114,119,120,132,136,137,138,139,140,141,142,143,144,145,146,147,154,155,158,],[-64,-89,-79,-45,-62,-91,-59,-46,-69,-90,-47,-85,-80,73,-88,-73,-60,-66,-52,-86,-87,-105,-81,-82,-83,119,-94,-92,-87,-48,-87,-84,-65,-68,-67,-70,-63,-50,-51,-71,-72,-93,-31,158,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-95,-32,-49,]),'DIV2':([3,5,13,22,24,26,29,31,32,34,48,49,59,62,63,73,80,89,113,114,115,119,120,136,137,138,139,140,155,],[-89,-79,-91,-90,-86,-85,-80,-87,-88,85,-86,-87,-81,-82,-83,-92,-87,-84,85,85,-87,-93,-31,-77,-74,-75,-78,-76,-32,]),'$end':([0,15,19,42,66,70,87,],[-4,0,-1,-2,-3,-6,-5,]),'ME':([9,21,31,115,158,],[52,-42,-41,-41,-49,]),'GT':([1,3,5,12,13,17,20,22,24,26,29,31,32,34,37,40,43,48,49,59,62,63,73,80,89,97,98,99,110,111,112,113,114,115,119,120,133,136,137,138,139,140,141,142,143,144,145,146,147,155,],[-64,-89,-79,-62,-91,-59,-69,-90,-86,-85,-80,-87,-88,-73,-60,-66,90,-86,-87,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,90,90,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-32,]),'AE':([9,21,31,115,158,],[54,-42,-41,-41,-49,]),'STRING':([0,2,4,10,14,16,19,30,33,41,42,44,45,46,51,52,53,54,55,56,57,58,61,64,65,66,67,68,69,70,75,77,78,82,83,84,85,86,87,88,90,91,92,93,94,95,118,152,153,156,157,161,172,175,180,181,183,],[22,22,22,22,22,22,22,22,22,22,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-3,22,22,22,-6,22,22,22,22,22,22,22,22,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'FOR':([0,19,42,66,70,87,161,175,],[23,23,-2,-3,-6,-5,23,23,]),'ELSEIF':([160,171,173,174,182,186,188,202,207,],[172,172,-16,172,172,-15,-104,-18,-19,]),'SHIFTLEFT':([1,3,5,13,20,22,24,26,29,31,32,34,40,48,49,59,62,63,73,80,89,96,97,98,99,110,113,114,115,119,120,133,136,137,138,139,140,155,],[46,-89,-79,-91,-69,-90,-86,-85,-80,-87,-88,-73,-66,-86,-87,-81,-82,-83,-92,-87,-84,46,-65,-66,-66,46,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-32,]),'EQUAL':([9,21,31,115,123,124,125,126,127,128,129,130,131,158,],[55,-42,-41,-41,-96,-101,-100,-102,-103,-98,-99,-97,157,-49,]),'BAND':([1,3,5,13,20,22,24,26,29,31,32,34,40,48,49,59,62,63,73,80,89,96,97,98,99,110,113,114,115,119,120,133,136,137,138,139,140,155,],[44,-89,-79,-91,-69,-90,-86,-85,-80,-87,-88,-73,-66,-86,-87,-81,-82,-83,-92,-87,-84,44,-65,-66,-66,44,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-32,]),'GE':([1,3,5,12,13,17,20,22,24,26,29,31,32,34,37,40,43,48,49,59,62,63,73,80,89,97,98,99,110,111,112,113,114,115,119,120,133,136,137,138,139,140,141,142,143,144,145,146,147,155,],[-64,-89,-79,-62,-91,-59,-69,-90,-86,-85,-80,-87,-88,-73,-60,-66,92,-86,-87,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,92,92,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-32,]),'TINT':([76,166,177,],[123,123,123,]),'LSQB':([0,2,4,10,14,16,19,30,31,33,41,42,44,45,46,51,52,53,54,55,56,57,58,61,64,65,66,67,68,69,70,75,77,78,80,82,83,84,85,86,87,88,90,91,92,93,94,95,115,118,152,153,156,157,161,172,175,180,181,183,],[30,30,30,30,30,30,30,30,77,30,30,-2,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-3,30,30,30,-6,30,30,30,77,30,30,30,30,30,-5,30,30,30,30,30,30,30,77,30,30,30,30,30,30,30,30,30,30,30,]),'DSE':([9,21,31,115,158,],[57,-42,-41,-41,-49,]),'ID':([0,2,4,10,11,14,16,19,30,33,41,42,44,45,46,51,52,53,54,55,56,57,58,61,64,65,66,67,68,69,70,75,77,78,82,83,84,85,86,87,88,90,91,92,93,94,95,109,118,152,153,156,157,161,165,172,175,180,181,183,],[31,49,49,49,60,49,49,31,74,80,49,-2,49,49,49,80,80,80,80,80,80,80,80,49,49,49,-3,49,49,115,-6,80,80,80,49,49,49,49,49,-5,49,49,49,49,49,49,49,151,74,80,80,80,80,31,151,80,31,80,80,80,]),'IF':([0,19,42,66,70,87,161,175,],[33,33,-2,-3,-6,-5,33,33,]),'AND':([1,3,5,12,13,17,18,20,22,24,26,29,31,32,34,37,40,43,48,49,50,59,62,63,73,80,89,97,98,99,110,111,112,113,114,115,119,120,133,136,137,138,139,140,141,142,143,144,145,146,147,155,],[-64,-89,-79,-62,-91,-59,64,-69,-90,-86,-85,-80,-87,-88,-73,-60,-66,-52,-86,-87,64,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,-50,-51,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-32,]),'LBRACE':([123,124,125,126,127,128,129,130,135,148,159,163,185,189,194,195,198,200,201,205,],[-96,-101,-100,-102,-103,-98,-99,-97,161,161,161,161,161,161,161,161,161,161,161,161,]),'TUPLE':([76,166,177,],[125,125,125,]),'CLONG':([76,166,177,],[126,126,126,]),'DEQUAL':([1,3,5,12,13,17,20,22,24,26,29,31,32,34,37,40,43,48,49,59,62,63,73,80,89,97,98,99,110,111,112,113,114,115,119,120,133,136,137,138,139,140,141,142,143,144,145,146,147,155,],[-64,-89,-79,-62,-91,-59,-69,-90,-86,-85,-80,-87,-88,-73,-60,-66,91,-86,-87,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,91,91,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-32,]),'FLOAT':([0,2,4,10,14,16,19,30,33,41,42,44,45,46,51,52,53,54,55,56,57,58,61,64,65,66,67,68,69,70,75,77,78,82,83,84,85,86,87,88,90,91,92,93,94,95,118,152,153,156,157,161,172,175,180,181,183,],[3,3,3,3,3,3,3,3,3,3,-2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-3,3,3,3,-6,3,3,3,3,3,3,3,3,-5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'TYPEIS':([31,115,151,164,],[76,76,166,177,]),'POW':([3,5,13,22,24,26,29,31,32,34,48,49,59,62,63,73,80,89,113,114,115,119,120,136,137,138,139,140,155,],[-89,-79,-91,-90,-86,-85,-80,-87,-88,82,-86,-87,-81,-82,-83,-92,-87,-84,82,82,-87,-93,-31,-77,-74,-75,-78,-76,-32,]),'NOT':([0,2,4,19,33,42,44,45,46,51,52,53,54,55,56,57,58,61,64,65,66,67,68,69,70,75,77,78,82,83,84,85,86,87,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[41,41,41,41,41,-2,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-3,41,41,41,-6,41,41,41,41,41,41,41,41,-5,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'CINT':([76,166,177,],[124,124,124,]),'TFLOAT':([76,166,177,],[128,128,128,]),'OR':([1,3,5,12,13,17,18,20,22,24,26,29,31,32,34,37,40,43,48,49,50,59,62,63,73,80,89,97,98,99,110,111,112,113,114,115,119,120,133,136,137,138,139,140,141,142,143,144,145,146,147,155,],[-64,-89,-79,-62,-91,-59,65,-69,-90,-86,-85,-80,-87,-88,-73,-60,-66,-52,-86,-87,65,-81,-82,-83,-92,-87,-84,-65,-68,-67,-63,-50,-51,-71,-72,-87,-93,-31,-69,-77,-74,-75,-78,-76,-61,-54,-58,-56,-57,-53,-55,-32,]),'SE':([9,21,31,115,158,],[58,-42,-41,-41,-49,]),'MOD':([3,5,13,22,24,26,29,31,32,34,48,49,59,62,63,73,80,89,113,114,115,119,120,136,137,138,139,140,155,],[-89,-79,-91,-90,-86,-85,-80,-87,-88,86,-86,-87,-81,-82,-83,-92,-87,-84,86,86,-87,-93,-31,-77,-74,-75,-78,-76,-32,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'and':([0,4,19,33,44,45,46,51,52,53,54,55,56,57,58,61,64,65,69,75,77,78,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[1,1,1,1,96,96,96,1,1,1,1,1,1,1,1,110,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'par_expr':([0,19,33,51,52,53,54,55,56,57,58,69,75,77,78,152,153,156,157,161,172,175,180,181,183,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'def_stmt':([0,19,161,175,],[7,7,7,7,]),'primary':([0,2,4,10,14,16,19,30,33,41,44,45,46,51,52,53,54,55,56,57,58,61,64,65,67,68,69,75,77,78,82,83,84,85,86,88,90,91,92,93,94,95,118,152,153,156,157,161,172,175,180,181,183,],[26,26,26,26,26,26,26,72,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,154,26,26,26,26,26,26,26,26,26,26,]),'assign_left':([0,19,69,161,175,],[9,9,9,9,9,]),'elseif_stmt':([160,171,174,182,],[173,173,186,186,]),'else_stmt':([174,182,],[187,192,]),'cmp_expr':([0,4,19,33,51,52,53,54,55,56,57,58,64,65,69,75,77,78,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,142,143,144,145,146,147,17,17,17,17,17,17,17,17,17,17,]),'xor':([0,4,19,33,51,52,53,54,55,56,57,58,64,65,69,75,77,78,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,141,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'primary_list':([30,],[71,]),'list_def':([0,2,4,10,14,16,19,30,33,41,44,45,46,51,52,53,54,55,56,57,58,61,64,65,67,68,69,75,77,78,82,83,84,85,86,88,90,91,92,93,94,95,118,152,153,156,157,161,172,175,180,181,183,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'program':([0,],[15,]),'factor':([0,2,4,19,33,44,45,46,51,52,53,54,55,56,57,58,61,64,65,67,68,69,75,77,78,82,83,84,85,86,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,136,137,138,139,140,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'test':([0,4,19,33,51,52,53,54,55,56,57,58,69,75,77,78,152,153,156,157,161,172,175,180,181,183,],[18,50,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'input':([0,161,],[19,175,]),'type':([76,166,177,],[131,179,189,]),'var_prototypes_list':([109,],[149,]),'arith':([0,2,4,19,33,44,45,46,51,52,53,54,55,56,57,58,61,64,65,69,75,77,78,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[20,47,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,133,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,133,]),'index_expr':([0,19,33,51,52,53,54,55,56,57,58,69,75,77,78,152,153,156,157,161,172,175,180,181,183,],[21,21,79,79,79,79,79,79,79,79,79,21,79,79,79,79,79,79,79,21,79,21,79,79,79,]),'call_stmt':([0,2,4,10,14,16,19,33,41,44,45,46,51,52,53,54,55,56,57,58,61,64,65,67,68,69,75,77,78,82,83,84,85,86,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[24,48,48,48,48,48,24,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,24,48,24,48,48,48,]),'return_expr':([0,19,33,51,52,53,54,55,56,57,58,69,75,77,78,152,153,156,157,161,172,175,180,181,183,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'stmt':([0,19,161,175,],[27,27,27,27,]),'args_list':([75,],[121,]),'for_stmt':([0,19,161,175,],[28,28,28,28,]),'var_prototype':([109,165,],[150,178,]),'atom':([0,2,4,10,14,16,19,33,41,44,45,46,51,52,53,54,55,56,57,58,61,64,65,67,68,69,75,77,78,82,83,84,85,86,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[29,29,29,59,62,63,29,29,89,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'term':([0,2,4,19,33,44,45,46,51,52,53,54,55,56,57,58,61,64,65,67,68,69,75,77,78,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,113,114,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'code_block':([135,148,159,163,185,189,194,195,198,200,201,205,],[160,162,171,176,196,197,202,203,204,206,207,208,]),'if_stmt':([0,19,161,175,],[35,35,35,35,]),'expr':([0,19,33,51,52,53,54,55,56,57,58,69,75,77,78,152,153,156,157,161,172,175,180,181,183,],[36,36,81,101,102,103,104,105,106,107,108,116,122,132,134,167,168,169,170,36,184,36,190,191,193,]),'or':([0,4,19,33,51,52,53,54,55,56,57,58,64,65,69,75,77,78,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'while_stmt':([0,19,161,175,],[39,39,39,39,]),'shift':([0,4,19,33,44,45,46,51,52,53,54,55,56,57,58,61,64,65,69,75,77,78,88,90,91,92,93,94,95,152,153,156,157,161,172,175,180,181,183,],[40,40,40,40,97,98,99,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'op':([0,19,161,175,],[42,66,42,66,]),'elseifs_stmts':([160,171,],[174,182,]),'assign':([0,19,69,161,175,],[38,38,117,38,38,]),'cmp':([0,4,19,33,51,52,53,54,55,56,57,58,64,65,69,75,77,78,152,153,156,157,161,172,175,180,181,183,],[43,43,43,43,43,43,43,43,43,43,43,43,111,112,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> input','program',1,'p_program','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',22),
  ('input -> op','input',1,'p_input','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',27),
  ('input -> input op','input',2,'p_input','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',28),
  ('input -> <empty>','input',0,'p_input','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',29),
  ('op -> expr SEMICOLON','op',2,'p_op','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',39),
  ('op -> stmt SEMICOLON','op',2,'p_op','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',40),
  ('stmt -> def_stmt','stmt',1,'p_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',46),
  ('stmt -> if_stmt','stmt',1,'p_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',47),
  ('stmt -> call_stmt','stmt',1,'p_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',48),
  ('stmt -> while_stmt','stmt',1,'p_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',49),
  ('stmt -> for_stmt','stmt',1,'p_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',50),
  ('stmt -> assign','stmt',1,'p_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',51),
  ('if_stmt -> IF expr THEN code_block elseifs_stmts else_stmt','if_stmt',6,'p_if_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',56),
  ('if_stmt -> IF LPAR expr RPAR code_block elseifs_stmts else_stmt','if_stmt',7,'p_if_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',57),
  ('elseifs_stmts -> elseifs_stmts elseif_stmt','elseifs_stmts',2,'p_elseifs_stmts','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',66),
  ('elseifs_stmts -> elseif_stmt','elseifs_stmts',1,'p_elseifs_stmts','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',67),
  ('elseifs_stmts -> <empty>','elseifs_stmts',0,'p_elseifs_stmts','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',68),
  ('elseif_stmt -> ELSEIF expr THEN code_block','elseif_stmt',4,'p_elseif_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',79),
  ('elseif_stmt -> ELSEIF LPAR expr RPAR code_block','elseif_stmt',5,'p_elseif_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',80),
  ('else_stmt -> ELSE THEN code_block','else_stmt',3,'p_else_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',89),
  ('else_stmt -> ELSE code_block','else_stmt',2,'p_else_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',90),
  ('while_stmt -> WHILE LPAR expr RPAR code_block','while_stmt',5,'p_stmt_while','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',99),
  ('while_stmt -> WHILE LPAR expr RPAR THEN code_block','while_stmt',6,'p_stmt_while','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',100),
  ('for_stmt -> FOR LPAR assign SEMICOLON expr SEMICOLON expr RPAR code_block','for_stmt',9,'p_stmt_for','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',109),
  ('for_stmt -> FOR LPAR expr SEMICOLON expr SEMICOLON expr RPAR THEN code_block','for_stmt',10,'p_stmt_for','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',110),
  ('def_stmt -> DEF ID LPAR var_prototypes_list RPAR TYPEIS type THEN code_block','def_stmt',9,'p_stmt_fdef','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',119),
  ('def_stmt -> DEF ID LPAR var_prototypes_list RPAR TYPEIS type code_block','def_stmt',8,'p_stmt_fdef','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',120),
  ('var_prototypes_list -> var_prototypes_list COMMA var_prototype','var_prototypes_list',3,'p_vpl','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',128),
  ('var_prototypes_list -> var_prototype','var_prototypes_list',1,'p_vpl','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',129),
  ('var_prototype -> ID TYPEIS type','var_prototype',3,'p_var_proto','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',138),
  ('call_stmt -> ID LPAR RPAR','call_stmt',3,'p_call_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',143),
  ('call_stmt -> ID LPAR args_list RPAR','call_stmt',4,'p_call_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',144),
  ('assign -> ID TYPEIS type EQUAL expr','assign',5,'p_assign_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',153),
  ('assign -> assign_left EQUAL expr','assign',3,'p_assign_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',154),
  ('assign -> assign_left PE expr','assign',3,'p_assign_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',155),
  ('assign -> assign_left ME expr','assign',3,'p_assign_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',156),
  ('assign -> assign_left SE expr','assign',3,'p_assign_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',157),
  ('assign -> assign_left DSE expr','assign',3,'p_assign_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',158),
  ('assign -> assign_left AE expr','assign',3,'p_assign_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',159),
  ('assign -> assign_left DAE expr','assign',3,'p_assign_stmt','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',160),
  ('assign_left -> ID','assign_left',1,'p_assign_left','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',179),
  ('assign_left -> index_expr','assign_left',1,'p_assign_left','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',180),
  ('args_list -> expr','args_list',1,'p_args_list','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',185),
  ('args_list -> args_list COMMA expr','args_list',3,'p_args_list','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',186),
  ('expr -> par_expr','expr',1,'p_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',195),
  ('expr -> test','expr',1,'p_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',196),
  ('expr -> return_expr','expr',1,'p_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',197),
  ('expr -> index_expr','expr',1,'p_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',198),
  ('index_expr -> ID LSQB expr RSQB','index_expr',4,'p_index_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',204),
  ('test -> test AND cmp','test',3,'p_test','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',209),
  ('test -> test OR cmp','test',3,'p_test','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',210),
  ('test -> cmp','test',1,'p_test','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',211),
  ('cmp -> cmp LT cmp_expr','cmp',3,'p_cmp','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',222),
  ('cmp -> cmp GT cmp_expr','cmp',3,'p_cmp','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',223),
  ('cmp -> cmp LE cmp_expr','cmp',3,'p_cmp','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',224),
  ('cmp -> cmp GE cmp_expr','cmp',3,'p_cmp','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',225),
  ('cmp -> cmp NE cmp_expr','cmp',3,'p_cmp','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',226),
  ('cmp -> cmp DEQUAL cmp_expr','cmp',3,'p_cmp','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',227),
  ('cmp -> cmp_expr','cmp',1,'p_cmp','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',228),
  ('cmp_expr -> or','cmp_expr',1,'p_cmp_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',248),
  ('or -> or BOR xor','or',3,'p_or_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',253),
  ('or -> xor','or',1,'p_or_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',254),
  ('xor -> xor BXOR and','xor',3,'p_xor_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',262),
  ('xor -> and','xor',1,'p_xor_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',263),
  ('and -> and BAND shift','and',3,'p_and_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',271),
  ('and -> shift','and',1,'p_and_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',272),
  ('shift -> and SHIFTLEFT shift','shift',3,'p_shift_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',280),
  ('shift -> and SHIFTRIGTH shift','shift',3,'p_shift_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',281),
  ('shift -> arith','shift',1,'p_shift_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',282),
  ('par_expr -> LPAR arith RPAR','par_expr',3,'p_par_expr','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',293),
  ('arith -> arith PLUS term','arith',3,'p_arith','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',298),
  ('arith -> arith MINUS term','arith',3,'p_arith','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',299),
  ('arith -> term','arith',1,'p_arith','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',300),
  ('term -> term MUL factor','term',3,'p_term','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',311),
  ('term -> term DIV factor','term',3,'p_term','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',312),
  ('term -> term MOD factor','term',3,'p_term','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',313),
  ('term -> term POW factor','term',3,'p_term','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',314),
  ('term -> term DIV2 factor','term',3,'p_term','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',315),
  ('term -> factor','term',1,'p_term','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',316),
  ('factor -> atom','factor',1,'p_factor','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',332),
  ('factor -> EMARK atom','factor',2,'p_factor','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',333),
  ('factor -> MINUS atom','factor',2,'p_factor','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',334),
  ('factor -> PLUS atom','factor',2,'p_factor','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',335),
  ('factor -> NOT atom','factor',2,'p_factor','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',336),
  ('atom -> primary','atom',1,'p_atom','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',351),
  ('atom -> call_stmt','atom',1,'p_atom','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',352),
  ('primary -> ID','primary',1,'p_primary','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',357),
  ('primary -> NUMBER','primary',1,'p_primary','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',358),
  ('primary -> FLOAT','primary',1,'p_primary','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',359),
  ('primary -> STRING','primary',1,'p_primary','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',360),
  ('primary -> list_def','primary',1,'p_primary','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',361),
  ('list_def -> LSQB RSQB','list_def',2,'p_list_def','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',368),
  ('list_def -> LSQB primary_list RSQB','list_def',3,'p_list_def','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',369),
  ('primary_list -> primary','primary_list',1,'p_primary_list','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',377),
  ('primary_list -> primary_list COMMA primary','primary_list',3,'p_primary_list','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',378),
  ('type -> TINT','type',1,'p_type','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',386),
  ('type -> TLONG','type',1,'p_type','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',387),
  ('type -> TFLOAT','type',1,'p_type','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',388),
  ('type -> ARRAY','type',1,'p_type','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',389),
  ('type -> TUPLE','type',1,'p_type','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',390),
  ('type -> CINT','type',1,'p_type','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',391),
  ('type -> CLONG','type',1,'p_type','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',392),
  ('type -> CFLOAT','type',1,'p_type','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',393),
  ('code_block -> LBRACE input RBRACE','code_block',3,'p_code_block','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',399),
  ('return_expr -> RETURN test','return_expr',2,'p_return','C:\\Users\\Carzil\\workspace\\Lynx\\src\\lyparser\\parser.py',405),
]
